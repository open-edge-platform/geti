# INTEL CONFIDENTIAL
# 
# Copyright (C) 2025 Intel Corporation
# 
# This software and the related documents are Intel copyrighted materials, and your use of them is governed by
# the express license under which they were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
# without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import user_common_pb2 as user__common__pb2
from . import user_pb2 as user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/user.User/create',
                request_serializer=user__common__pb2.UserData.SerializeToString,
                response_deserializer=user__common__pb2.UserData.FromString,
                )
        self.modify = channel.unary_unary(
                '/user.User/modify',
                request_serializer=user__common__pb2.UserData.SerializeToString,
                response_deserializer=user__common__pb2.UserData.FromString,
                )
        self.get_active_user = channel.unary_unary(
                '/user.User/get_active_user',
                request_serializer=user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=user__pb2.ActiveUserData.FromString,
                )
        self.get_user_profile = channel.unary_unary(
                '/user.User/get_user_profile',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=user__pb2.UserProfileData.FromString,
                )
        self.get_by_id = channel.unary_unary(
                '/user.User/get_by_id',
                request_serializer=user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=user__common__pb2.UserData.FromString,
                )
        self.get_by_external_id = channel.unary_unary(
                '/user.User/get_by_external_id',
                request_serializer=user__pb2.UserExtIdRequest.SerializeToString,
                response_deserializer=user__common__pb2.UserData.FromString,
                )
        self.find = channel.unary_unary(
                '/user.User/find',
                request_serializer=user__pb2.FindUserRequest.SerializeToString,
                response_deserializer=user__pb2.ListUsersResponse.FromString,
                )
        self.logout = channel.unary_unary(
                '/user.User/logout',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete = channel.unary_unary(
                '/user.User/delete',
                request_serializer=user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.send_invitation = channel.unary_unary(
                '/user.User/send_invitation',
                request_serializer=user__common__pb2.UserInvitationRequest.SerializeToString,
                response_deserializer=user__pb2.UserInvitationResponse.FromString,
                )
        self.add_photo = channel.stream_unary(
                '/user.User/add_photo',
                request_serializer=user__pb2.UserPhotoRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete_photo = channel.unary_unary(
                '/user.User/delete_photo',
                request_serializer=user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_photo = channel.unary_unary(
                '/user.User/get_photo',
                request_serializer=user__pb2.UserIdRequest.SerializeToString,
                response_deserializer=common__pb2.PreUrlResponse.FromString,
                )
        self.get_roles = channel.unary_unary(
                '/user.User/get_roles',
                request_serializer=user__pb2.UserGetRolesRequest.SerializeToString,
                response_deserializer=user__pb2.UserRolesResponse.FromString,
                )
        self.set_roles = channel.unary_unary(
                '/user.User/set_roles',
                request_serializer=user__pb2.UserRolesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_user_roles = channel.unary_unary(
                '/user.User/get_user_roles',
                request_serializer=user__pb2.UserPayload.SerializeToString,
                response_deserializer=user__pb2.RolesResponse.FromString,
                )
        self.assign_role = channel.unary_unary(
                '/user.User/assign_role',
                request_serializer=user__pb2.UserRolePayload.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.remove_role = channel.unary_unary(
                '/user.User/remove_role',
                request_serializer=user__pb2.UserRolePayload.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_users = channel.unary_unary(
                '/user.User/get_users',
                request_serializer=user__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=user__pb2.ListGetUsersResponse.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create(self, request, context):
        """POST /organizations/{organization_id}/users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modify(self, request, context):
        """PUT /organizations/{organization_id}/users/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_active_user(self, request, context):
        """GET /organizations/{organization_id}/users/activeUser
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_user_profile(self, request, context):
        """GET /api/v1/profile
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_by_id(self, request, context):
        """GET /organizations/{organization_id}/users/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_by_external_id(self, request, context):
        """GET /organizations/users/{external_id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def find(self, request, context):
        """GET /organizations/{organization_id}/users  - conditions passed in the query string
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """DELETE /organizations/{organization_id}/users/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_invitation(self, request, context):
        """POST /organizations/{organization_id}/users/invitations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_photo(self, request_iterator, context):
        """PUT /organization/{organization_id}/users/{id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_photo(self, request, context):
        """DELETE /organization/{organization_id}/users/{id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_photo(self, request, context):
        """GET /organizations/{organization_id}/users/{id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_roles(self, request, context):
        """GET /organizations/{organization_id}/users/{id}/roles/{resource_type}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def set_roles(self, request, context):
        """PUT /organizations/{organization_id}/users/{id}/roles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_user_roles(self, request, context):
        """GET /organizations/{org_id}/membership/{usr_id}/roles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def assign_role(self, request, context):
        """POST /organizations/{organization_id}/membership/{user_id}/roles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def remove_role(self, request, context):
        """DELETE /organizations/{user.organization_id}/membership/{user.user_id}/roles
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_users(self, request, context):
        """GET /users
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=user__common__pb2.UserData.FromString,
                    response_serializer=user__common__pb2.UserData.SerializeToString,
            ),
            'modify': grpc.unary_unary_rpc_method_handler(
                    servicer.modify,
                    request_deserializer=user__common__pb2.UserData.FromString,
                    response_serializer=user__common__pb2.UserData.SerializeToString,
            ),
            'get_active_user': grpc.unary_unary_rpc_method_handler(
                    servicer.get_active_user,
                    request_deserializer=user__pb2.UserIdRequest.FromString,
                    response_serializer=user__pb2.ActiveUserData.SerializeToString,
            ),
            'get_user_profile': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_profile,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=user__pb2.UserProfileData.SerializeToString,
            ),
            'get_by_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_by_id,
                    request_deserializer=user__pb2.UserIdRequest.FromString,
                    response_serializer=user__common__pb2.UserData.SerializeToString,
            ),
            'get_by_external_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_by_external_id,
                    request_deserializer=user__pb2.UserExtIdRequest.FromString,
                    response_serializer=user__common__pb2.UserData.SerializeToString,
            ),
            'find': grpc.unary_unary_rpc_method_handler(
                    servicer.find,
                    request_deserializer=user__pb2.FindUserRequest.FromString,
                    response_serializer=user__pb2.ListUsersResponse.SerializeToString,
            ),
            'logout': grpc.unary_unary_rpc_method_handler(
                    servicer.logout,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=user__pb2.UserIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'send_invitation': grpc.unary_unary_rpc_method_handler(
                    servicer.send_invitation,
                    request_deserializer=user__common__pb2.UserInvitationRequest.FromString,
                    response_serializer=user__pb2.UserInvitationResponse.SerializeToString,
            ),
            'add_photo': grpc.stream_unary_rpc_method_handler(
                    servicer.add_photo,
                    request_deserializer=user__pb2.UserPhotoRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete_photo': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_photo,
                    request_deserializer=user__pb2.UserIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_photo': grpc.unary_unary_rpc_method_handler(
                    servicer.get_photo,
                    request_deserializer=user__pb2.UserIdRequest.FromString,
                    response_serializer=common__pb2.PreUrlResponse.SerializeToString,
            ),
            'get_roles': grpc.unary_unary_rpc_method_handler(
                    servicer.get_roles,
                    request_deserializer=user__pb2.UserGetRolesRequest.FromString,
                    response_serializer=user__pb2.UserRolesResponse.SerializeToString,
            ),
            'set_roles': grpc.unary_unary_rpc_method_handler(
                    servicer.set_roles,
                    request_deserializer=user__pb2.UserRolesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_user_roles': grpc.unary_unary_rpc_method_handler(
                    servicer.get_user_roles,
                    request_deserializer=user__pb2.UserPayload.FromString,
                    response_serializer=user__pb2.RolesResponse.SerializeToString,
            ),
            'assign_role': grpc.unary_unary_rpc_method_handler(
                    servicer.assign_role,
                    request_deserializer=user__pb2.UserRolePayload.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'remove_role': grpc.unary_unary_rpc_method_handler(
                    servicer.remove_role,
                    request_deserializer=user__pb2.UserRolePayload.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_users': grpc.unary_unary_rpc_method_handler(
                    servicer.get_users,
                    request_deserializer=user__pb2.GetUsersRequest.FromString,
                    response_serializer=user__pb2.ListGetUsersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/create',
            user__common__pb2.UserData.SerializeToString,
            user__common__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/modify',
            user__common__pb2.UserData.SerializeToString,
            user__common__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_active_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_active_user',
            user__pb2.UserIdRequest.SerializeToString,
            user__pb2.ActiveUserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_user_profile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_user_profile',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            user__pb2.UserProfileData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_by_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_by_id',
            user__pb2.UserIdRequest.SerializeToString,
            user__common__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_by_external_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_by_external_id',
            user__pb2.UserExtIdRequest.SerializeToString,
            user__common__pb2.UserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/find',
            user__pb2.FindUserRequest.SerializeToString,
            user__pb2.ListUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/logout',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/delete',
            user__pb2.UserIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_invitation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/send_invitation',
            user__common__pb2.UserInvitationRequest.SerializeToString,
            user__pb2.UserInvitationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_photo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/user.User/add_photo',
            user__pb2.UserPhotoRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_photo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/delete_photo',
            user__pb2.UserIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_photo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_photo',
            user__pb2.UserIdRequest.SerializeToString,
            common__pb2.PreUrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_roles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_roles',
            user__pb2.UserGetRolesRequest.SerializeToString,
            user__pb2.UserRolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def set_roles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/set_roles',
            user__pb2.UserRolesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_user_roles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_user_roles',
            user__pb2.UserPayload.SerializeToString,
            user__pb2.RolesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def assign_role(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/assign_role',
            user__pb2.UserRolePayload.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def remove_role(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/remove_role',
            user__pb2.UserRolePayload.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_users(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/get_users',
            user__pb2.GetUsersRequest.SerializeToString,
            user__pb2.ListGetUsersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
