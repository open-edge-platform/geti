# INTEL CONFIDENTIAL
# 
# Copyright (C) 2025 Intel Corporation
# 
# This software and the related documents are Intel copyrighted materials, and your use of them is governed by
# the express license under which they were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
# without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import personal_access_token_pb2 as personal__access__token__pb2


class PersonalAccessTokenStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/create',
                request_serializer=personal__access__token__pb2.PersonalAccessTokenCreateRequest.SerializeToString,
                response_deserializer=personal__access__token__pb2.PersonalAccessTokenCreateResponse.FromString,
                )
        self.get_by_hash = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/get_by_hash',
                request_serializer=personal__access__token__pb2.GetByHashRequest.SerializeToString,
                response_deserializer=personal__access__token__pb2.PersonalAccessTokenResponse.FromString,
                )
        self.get_org_from_token = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/get_org_from_token',
                request_serializer=personal__access__token__pb2.GetOrgFromTokenRequest.SerializeToString,
                response_deserializer=personal__access__token__pb2.GetOrganizationByTokenResponse.FromString,
                )
        self.extend = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/extend',
                request_serializer=personal__access__token__pb2.PersonalAccessTokenExtendRequest.SerializeToString,
                response_deserializer=personal__access__token__pb2.PersonalAccessTokenResponse.FromString,
                )
        self.revoke = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/revoke',
                request_serializer=personal__access__token__pb2.PersonalAccessTokenRevokeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.find = channel.unary_unary(
                '/personal_access_token.PersonalAccessToken/find',
                request_serializer=personal__access__token__pb2.PersonalAccessTokenFindRequest.SerializeToString,
                response_deserializer=personal__access__token__pb2.ListPersonalAccessTokensResponse.FromString,
                )


class PersonalAccessTokenServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create(self, request, context):
        """POST /api/v1/organizations/{organization_id}/users/{user_id}/personal_access_tokens
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_by_hash(self, request, context):
        """GET /api/v1/personal_access_tokens/{hash}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_org_from_token(self, request, context):
        """GET /api/v1/personal_access_tokens/organization
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def extend(self, request, context):
        """PATCH /api/v1/organizations/{organization_id}/users/{user_id}/personal_access_tokens/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def revoke(self, request, context):
        """DELETE /api/v1/organizations/{organization_id}/users/{user_id}/personal_access_tokens/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def find(self, request, context):
        """GET /api/v1/organizations/{organization_id}/users/{user_id}/personal_access_tokens
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PersonalAccessTokenServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=personal__access__token__pb2.PersonalAccessTokenCreateRequest.FromString,
                    response_serializer=personal__access__token__pb2.PersonalAccessTokenCreateResponse.SerializeToString,
            ),
            'get_by_hash': grpc.unary_unary_rpc_method_handler(
                    servicer.get_by_hash,
                    request_deserializer=personal__access__token__pb2.GetByHashRequest.FromString,
                    response_serializer=personal__access__token__pb2.PersonalAccessTokenResponse.SerializeToString,
            ),
            'get_org_from_token': grpc.unary_unary_rpc_method_handler(
                    servicer.get_org_from_token,
                    request_deserializer=personal__access__token__pb2.GetOrgFromTokenRequest.FromString,
                    response_serializer=personal__access__token__pb2.GetOrganizationByTokenResponse.SerializeToString,
            ),
            'extend': grpc.unary_unary_rpc_method_handler(
                    servicer.extend,
                    request_deserializer=personal__access__token__pb2.PersonalAccessTokenExtendRequest.FromString,
                    response_serializer=personal__access__token__pb2.PersonalAccessTokenResponse.SerializeToString,
            ),
            'revoke': grpc.unary_unary_rpc_method_handler(
                    servicer.revoke,
                    request_deserializer=personal__access__token__pb2.PersonalAccessTokenRevokeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'find': grpc.unary_unary_rpc_method_handler(
                    servicer.find,
                    request_deserializer=personal__access__token__pb2.PersonalAccessTokenFindRequest.FromString,
                    response_serializer=personal__access__token__pb2.ListPersonalAccessTokensResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'personal_access_token.PersonalAccessToken', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PersonalAccessToken(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/create',
            personal__access__token__pb2.PersonalAccessTokenCreateRequest.SerializeToString,
            personal__access__token__pb2.PersonalAccessTokenCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_by_hash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/get_by_hash',
            personal__access__token__pb2.GetByHashRequest.SerializeToString,
            personal__access__token__pb2.PersonalAccessTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_org_from_token(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/get_org_from_token',
            personal__access__token__pb2.GetOrgFromTokenRequest.SerializeToString,
            personal__access__token__pb2.GetOrganizationByTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def extend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/extend',
            personal__access__token__pb2.PersonalAccessTokenExtendRequest.SerializeToString,
            personal__access__token__pb2.PersonalAccessTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def revoke(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/revoke',
            personal__access__token__pb2.PersonalAccessTokenRevokeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/personal_access_token.PersonalAccessToken/find',
            personal__access__token__pb2.PersonalAccessTokenFindRequest.SerializeToString,
            personal__access__token__pb2.ListPersonalAccessTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
