# INTEL CONFIDENTIAL
# 
# Copyright (C) 2025 Intel Corporation
# 
# This software and the related documents are Intel copyrighted materials, and your use of them is governed by
# the express license under which they were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
# without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import membership_status_pb2 as membership__status__pb2


class UserStatusStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.change = channel.unary_unary(
                '/user_status_proto.UserStatus/change',
                request_serializer=membership__status__pb2.UserStatusRequest.SerializeToString,
                response_deserializer=membership__status__pb2.UserStatusResponse.FromString,
                )


class UserStatusServicer(object):
    """Missing associated documentation comment in .proto file."""

    def change(self, request, context):
        """PUT /organizations/{organization_id}/users/{user_id}/statuses
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserStatusServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'change': grpc.unary_unary_rpc_method_handler(
                    servicer.change,
                    request_deserializer=membership__status__pb2.UserStatusRequest.FromString,
                    response_serializer=membership__status__pb2.UserStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_status_proto.UserStatus', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UserStatus(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def change(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_status_proto.UserStatus/change',
            membership__status__pb2.UserStatusRequest.SerializeToString,
            membership__status__pb2.UserStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MembershipStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMemberships = channel.unary_unary(
                '/user_status_proto.Membership/GetMemberships',
                request_serializer=membership__status__pb2.MembershipRequest.SerializeToString,
                response_deserializer=membership__status__pb2.ListMembershipResponse.FromString,
                )
        self.Modify = channel.unary_unary(
                '/user_status_proto.Membership/Modify',
                request_serializer=membership__status__pb2.MembershipStatusRequest.SerializeToString,
                response_deserializer=membership__status__pb2.MembershipStatusResponse.FromString,
                )
        self.GetUserMemberships = channel.unary_unary(
                '/user_status_proto.Membership/GetUserMemberships',
                request_serializer=membership__status__pb2.UserMembershipRequest.SerializeToString,
                response_deserializer=membership__status__pb2.ListUserMembershipResponse.FromString,
                )
        self.DeleteMemberships = channel.unary_unary(
                '/user_status_proto.Membership/DeleteMemberships',
                request_serializer=membership__status__pb2.DeleteMembershipRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class MembershipServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMemberships(self, request, context):
        """GET /organization/{organization_id}/memberships
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Modify(self, request, context):
        """PUT /organizations/{organization_id}/memberships/{user_id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserMemberships(self, request, context):
        """GET /users/{user_id}/memberships
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMemberships(self, request, context):
        """DELETE /organizations/{organization_id}/memberships/{user_id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MembershipServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMemberships': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMemberships,
                    request_deserializer=membership__status__pb2.MembershipRequest.FromString,
                    response_serializer=membership__status__pb2.ListMembershipResponse.SerializeToString,
            ),
            'Modify': grpc.unary_unary_rpc_method_handler(
                    servicer.Modify,
                    request_deserializer=membership__status__pb2.MembershipStatusRequest.FromString,
                    response_serializer=membership__status__pb2.MembershipStatusResponse.SerializeToString,
            ),
            'GetUserMemberships': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserMemberships,
                    request_deserializer=membership__status__pb2.UserMembershipRequest.FromString,
                    response_serializer=membership__status__pb2.ListUserMembershipResponse.SerializeToString,
            ),
            'DeleteMemberships': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMemberships,
                    request_deserializer=membership__status__pb2.DeleteMembershipRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_status_proto.Membership', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Membership(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMemberships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_status_proto.Membership/GetMemberships',
            membership__status__pb2.MembershipRequest.SerializeToString,
            membership__status__pb2.ListMembershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Modify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_status_proto.Membership/Modify',
            membership__status__pb2.MembershipStatusRequest.SerializeToString,
            membership__status__pb2.MembershipStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserMemberships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_status_proto.Membership/GetUserMemberships',
            membership__status__pb2.UserMembershipRequest.SerializeToString,
            membership__status__pb2.ListUserMembershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMemberships(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user_status_proto.Membership/DeleteMemberships',
            membership__status__pb2.DeleteMembershipRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
