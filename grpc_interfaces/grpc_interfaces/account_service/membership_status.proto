// INTEL CONFIDENTIAL
//
// Copyright (C) 2024 Intel Corporation
//
// This software and the related documents are Intel copyrighted materials, and your use of them is governed by
// the express license under which they were provided to you ("License"). Unless the License provides otherwise,
// you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
// without Intel's prior written permission.
//
// This software and the related documents are provided as is, with no express or implied warranties,
// other than those that are expressly stated in the License.

syntax = "proto3";

option go_package = "geti.com/account_service_grpc/pb";

package user_status_proto;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message UserStatusRequest {
  string status = 1;
  string user_id = 2;
  string organization_id = 3;
  string created_by = 4;
}

message UserStatusResponse {
  string id = 1;
  string status = 2;
  string organization_id = 3;
  string user_id = 4;
  string created_by = 5;
  google.protobuf.Timestamp created_at = 6;
}

service UserStatus {
  // PUT /organizations/{organization_id}/users/{user_id}/statuses
  rpc change (UserStatusRequest) returns (UserStatusResponse) {
    option (google.api.http) = {
      put: "/api/v1/organizations/{organization_id}/users/{user_id}/statuses"
      body: "*"
    };
  }
}

message MembershipRequest {
  string first_name = 1;
  string second_name = 2;
  string email = 3;
  string status = 4;
  google.protobuf.Timestamp created_at = 5;
  string name = 6;
  string organization_id = 7;
  string sort_by = 8;
  string sort_direction = 9;  //asc/desc
  int32 skip = 10;
  int32 limit = 11;
}

message MembershipResponse {
  string id = 1; 
  string user_id = 2;
  string first_name = 3;
  string second_name = 4;
  string email = 5;
  string status = 6;
  google.protobuf.Timestamp created_at = 7;
}

message ListMembershipResponse {
  message NextPage {
    int32 skip = 1;
    int32 limit = 2;
  }
  repeated MembershipResponse memberships = 1;
  int32 total_count = 2;
  int32 total_matched_count = 3;
  optional NextPage next_page = 4;
}

message MembershipStatusResponse {
  string id = 1;
  string status = 2;
  string organization_id = 3;
  string user_id = 4;
  string created_by = 5;
  google.protobuf.Timestamp created_at = 6;
}

message MembershipStatusPayload {
  string status = 1;
}

message MembershipStatusRequest {
  MembershipStatusPayload payload = 1;
  string user_id = 2;
  string organization_id = 3;
  string created_by = 4;
}

message UserMembershipRequest {
  string user_id = 1;
  string organization_name = 2;
  string sort_by = 3;
  string sort_direction = 4;  //asc/desc
  int32 skip = 5;
  int32 limit = 6;
}

message UserMembershipResponse {
  string id = 1;
  string organization_id = 2;
  string organization_name = 3;
  string status = 4;
  google.protobuf.Timestamp created_at = 5;
}

message ListUserMembershipResponse {
  message NextPage {
    int32 skip = 1;
    int32 limit = 2;
  }
  repeated UserMembershipResponse memberships = 1;
  int32 total_count = 2;
  int32 total_matched_count = 3;
  optional NextPage next_page = 4;
}

message DeleteMembershipRequest {
  string user_id = 1;
  string organization_id = 2;
}

service Membership {
  // GET /organization/{organization_id}/memberships
    rpc GetMemberships (MembershipRequest) returns (ListMembershipResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{organization_id}/memberships"
    };
  }
  // PUT /organizations/{organization_id}/memberships/{user_id}
  rpc Modify (MembershipStatusRequest) returns (MembershipStatusResponse) {
    option (google.api.http) = {
      put: "/api/v1/organizations/{organization_id}/memberships/{user_id}"
      body: "payload"
    };
  }
  // GET /users/{user_id}/memberships
  rpc GetUserMemberships (UserMembershipRequest) returns (ListUserMembershipResponse) {
    option (google.api.http) = {
      get: "/api/v1/users/{user_id}/memberships"
    };
  }
  // DELETE /organizations/{organization_id}/memberships/{user_id}
  rpc DeleteMemberships (DeleteMembershipRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/organizations/{organization_id}/memberships/{user_id}"
    };
  }
}
