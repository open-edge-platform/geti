// INTEL CONFIDENTIAL
//
// Copyright (C) 2024 Intel Corporation
//
// This software and the related documents are Intel copyrighted materials, and your use of them is governed by
// the express license under which they were provided to you ("License"). Unless the License provides otherwise,
// you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
// without Intel's prior written permission.
//
// This software and the related documents are provided as is, with no express or implied warranties,
// other than those that are expressly stated in the License.

syntax = "proto3";

option go_package = "geti.com/account_service_grpc/pb";

package workspace;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

message WorkspaceData {
  string id = 1;
  string name = 2;
  string organization_id = 3;
  google.protobuf.Timestamp created_at = 4;
  string created_by = 5;
  google.protobuf.Timestamp modified_at = 6;
  string modified_by = 7;
}

message WorkspaceIdRequest {
  string id = 1;
  string organization_id = 2;
}

message FindWorkspaceRequest {
  string name = 1;
  string organization_id = 2;
  string billing_child_account_id = 3;
  google.protobuf.Timestamp created_at_from = 4;
  google.protobuf.Timestamp created_at_to = 5;
  string created_by = 6;
  google.protobuf.Timestamp modified_at_from = 7;
  google.protobuf.Timestamp modified_at_to = 8;
  string modified_by = 9;
  int32 skip = 10;
  int32 limit = 11;
  string sort_by = 12;  //attribute name
  string sort_direction = 13;  //asc/desc
}

message ListWorkspacesResponse {
  message NextPage{
    int32 skip = 1;
    int32 limit = 2;
  }
  repeated WorkspaceData workspaces = 1;
  int32 total_count = 2;
  int32 total_matched_count = 3;
  optional NextPage next_page = 4;
}

service Workspace {
  // POST /organizations/{organization_id}/workspaces
  rpc create (WorkspaceData) returns (WorkspaceData) {
    option (google.api.http) = {
      post: "/api/v1/organizations/{organization_id}/workspaces"
      body: "*"
    };
  }

  // PUT /organizations/{organization_id}/workspaces
  rpc modify (WorkspaceData) returns (WorkspaceData) {
    option (google.api.http) = {
      put: "/api/v1/organizations/{organization_id}/workspaces/{id}"
      body: "*"
    };
  }

  // GET /organizations/{organization_id}/workspaces/{id}
  rpc get_by_id (WorkspaceIdRequest) returns (WorkspaceData) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{organization_id}/workspaces/{id}"
    };
  }

  // GET /organizations/{organization_id}/workspaces  - conditions passed in the query string
  rpc find (FindWorkspaceRequest) returns (ListWorkspacesResponse) {
    option (google.api.http) = {
      get: "/api/v1/organizations/{organization_id}/workspaces"
    };
  }

  // DELETE /organizations/{organization_id}/workspaces/{id}
  rpc delete (WorkspaceIdRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/organizations/{organization_id}/workspaces/{id}"
    };
  }

}
