# Copyright (C) 2022-2025 Intel Corporation
# LIMITED EDGE SOFTWARE DISTRIBUTION LICENSE

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import common_pb2 as common__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import organization_pb2 as organization__pb2


class OrganizationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create = channel.unary_unary(
                '/organization.Organization/create',
                request_serializer=organization__pb2.OrganizationData.SerializeToString,
                response_deserializer=organization__pb2.OrganizationData.FromString,
                )
        self.modify = channel.unary_unary(
                '/organization.Organization/modify',
                request_serializer=organization__pb2.OrganizationData.SerializeToString,
                response_deserializer=organization__pb2.OrganizationData.FromString,
                )
        self.get_by_id = channel.unary_unary(
                '/organization.Organization/get_by_id',
                request_serializer=organization__pb2.OrganizationIdRequest.SerializeToString,
                response_deserializer=organization__pb2.OrganizationDataWithAdmins.FromString,
                )
        self.find = channel.unary_unary(
                '/organization.Organization/find',
                request_serializer=organization__pb2.FindOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.ListOrganizationsResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/organization.Organization/delete',
                request_serializer=organization__pb2.OrganizationIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.add_photo = channel.stream_unary(
                '/organization.Organization/add_photo',
                request_serializer=organization__pb2.OrganizationLogoRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.delete_photo = channel.unary_unary(
                '/organization.Organization/delete_photo',
                request_serializer=organization__pb2.OrganizationIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.get_photo = channel.unary_unary(
                '/organization.Organization/get_photo',
                request_serializer=organization__pb2.OrganizationIdRequest.SerializeToString,
                response_deserializer=common__pb2.PreUrlResponse.FromString,
                )
        self.send_invitation = channel.unary_unary(
                '/organization.Organization/send_invitation',
                request_serializer=organization__pb2.OrganizationInvitiationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.send_invitation_simple = channel.unary_unary(
                '/organization.Organization/send_invitation_simple',
                request_serializer=organization__pb2.OrganizationInvitiationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class OrganizationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create(self, request, context):
        """POST /organizations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modify(self, request, context):
        """PUT /organizations/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_by_id(self, request, context):
        """GET /organizations/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def find(self, request, context):
        """GET /organizations  - conditions passed in the query string
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """DELETE /organizations/{id}
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def add_photo(self, request_iterator, context):
        """PUT /organizations/{organization_id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_photo(self, request, context):
        """DELETE /organizations/{organization_id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_photo(self, request, context):
        """GET /organizations/{organization_id}/photos
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_invitation(self, request, context):
        """POST /organizations/invitations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_invitation_simple(self, request, context):
        """POST /organizations/invitations - simple url
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrganizationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create': grpc.unary_unary_rpc_method_handler(
                    servicer.create,
                    request_deserializer=organization__pb2.OrganizationData.FromString,
                    response_serializer=organization__pb2.OrganizationData.SerializeToString,
            ),
            'modify': grpc.unary_unary_rpc_method_handler(
                    servicer.modify,
                    request_deserializer=organization__pb2.OrganizationData.FromString,
                    response_serializer=organization__pb2.OrganizationData.SerializeToString,
            ),
            'get_by_id': grpc.unary_unary_rpc_method_handler(
                    servicer.get_by_id,
                    request_deserializer=organization__pb2.OrganizationIdRequest.FromString,
                    response_serializer=organization__pb2.OrganizationDataWithAdmins.SerializeToString,
            ),
            'find': grpc.unary_unary_rpc_method_handler(
                    servicer.find,
                    request_deserializer=organization__pb2.FindOrganizationRequest.FromString,
                    response_serializer=organization__pb2.ListOrganizationsResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=organization__pb2.OrganizationIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'add_photo': grpc.stream_unary_rpc_method_handler(
                    servicer.add_photo,
                    request_deserializer=organization__pb2.OrganizationLogoRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'delete_photo': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_photo,
                    request_deserializer=organization__pb2.OrganizationIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'get_photo': grpc.unary_unary_rpc_method_handler(
                    servicer.get_photo,
                    request_deserializer=organization__pb2.OrganizationIdRequest.FromString,
                    response_serializer=common__pb2.PreUrlResponse.SerializeToString,
            ),
            'send_invitation': grpc.unary_unary_rpc_method_handler(
                    servicer.send_invitation,
                    request_deserializer=organization__pb2.OrganizationInvitiationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'send_invitation_simple': grpc.unary_unary_rpc_method_handler(
                    servicer.send_invitation_simple,
                    request_deserializer=organization__pb2.OrganizationInvitiationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'organization.Organization', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Organization(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/create',
            organization__pb2.OrganizationData.SerializeToString,
            organization__pb2.OrganizationData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def modify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/modify',
            organization__pb2.OrganizationData.SerializeToString,
            organization__pb2.OrganizationData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_by_id(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/get_by_id',
            organization__pb2.OrganizationIdRequest.SerializeToString,
            organization__pb2.OrganizationDataWithAdmins.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/find',
            organization__pb2.FindOrganizationRequest.SerializeToString,
            organization__pb2.ListOrganizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/delete',
            organization__pb2.OrganizationIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def add_photo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/organization.Organization/add_photo',
            organization__pb2.OrganizationLogoRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_photo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/delete_photo',
            organization__pb2.OrganizationIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_photo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/get_photo',
            organization__pb2.OrganizationIdRequest.SerializeToString,
            common__pb2.PreUrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_invitation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/send_invitation',
            organization__pb2.OrganizationInvitiationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_invitation_simple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/organization.Organization/send_invitation_simple',
            organization__pb2.OrganizationInvitiationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
