// Dependency Update Configuration
//
// See https://docs.renovatebot.com/configuration-options/
// See https://json5.org/ for JSON5 syntax

// [!] While updating the Renovate config, test changes on your own fork.
//  1. Modify the Renovate configuration, which is located in .github/renovate.json5 and push your changes to the default branch of your fork.
//  2. Enable the Renovate GitHub app in your GitHub account.
//     Verify that Renovate is activated in the repository settings within the Renovate Dashboard.
//     To enable the dashboard set `dependencyDashboard` to true
//  3. Trigger the Renovate app from the dashboard, or push a new commit to your fork’s default branch to re-trigger Renovate.
//  4. Use the dashboard to initiate Renovate and create a PR on your fork, then check that the proposed PRs are modifying the correct parts.
//  5. Once you’ve validated that the Renovate configuration works on your fork, submit a PR,
//     and include links in the description to share details about the testing you've conducted.

{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",

  extends: ["config:base", ":gitSignOff", "helpers:pinGitHubActionDigests"],
  // https://docs.renovatebot.com/presets-default/#gitsignoff
  // https://docs.renovatebot.com/presets-helpers/#helperspingithubactiondigests

  // if necessary, add supported releases branches here
  // it is possible to enable/disable specific upgrades per branch with
  // `matchBaseBranches` in specific rule
  baseBranches: ["main"],

  enabledManagers: ["dockerfile", "github-actions", "gomod", "pep621", "npm"],

  // ignore Geti components
  ignoreDeps: [
    "geti.com/iai_core",
    "geti.com/modelmesh",
    "geti.com/modelregistration",
    "geti.com/predict",
    "geti.com/account_service_grpc",
    "geti.com/credit_system",
  ],

  // Set limit to 5
  ignorePresets: [":prHourlyLimit2"],
  prHourlyLimit: 5,
  ignorePaths: [], // to include tests folders as well as `config:base` ignores it

  // https://docs.renovatebot.com/golang/
  postUpdateOptions: ["gomodTidy"],

  packageRules: [
    // Enable pinning for container images
    // https://docs.renovatebot.com/presets-docker/#dockerpindigests
    {
      enabled: true,
      matchDatasources: ["docker"],
      pinDigests: true,
      groupName: "Pin dependencies",
      groupSlug: "pin-deps",
    },

    // Disable non-security upgrades for go, python, npm.
    // We will enable it in the next phase
    {
      enabled: false,
      matchManagers: ["gomod", "pep621", "npm"],
    },

    // Disable non-security upgrades for playwright and Dockerfile syntax (docker/dockerfile)
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchDepNames: ["mcr.microsoft.com/playwright", "docker/dockerfile"],
    },

    // Disable python base image upgrades, except digital pinning,
    // we will enable it in the next phase
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["python"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["docker.io/python"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    // Disable golang base image upgrades, except digital pinning,
    // we will enable it in the next phase
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["golang"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    // Disable nginx base image upgrades, except digital pinning,
    // we will enable it in the next phase
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["nginx"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    // Disable node image upgrades, except digital pinning,
    // we will enable it in the next phase
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["node"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    // Disable ghcr.io/astral-sh/uv image upgrades, except digital pinning,
    // we will enable it in the next phase
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchPackageNames: ["ghcr.io/astral-sh/uv"],
      matchUpdateTypes: ["major", "minor", "patch"],
    },

    // Disable upgrades for non production images
    {
      enabled: false,
      matchDatasources: ["docker"],
      matchFileNames: ["**/Dockerfile.protoc"],
    },

    // Group minor/patch/digest GitHub Actions updates
    {
      enabled: true,
      groupName: "GitHub Actions",
      matchManagers: ["github-actions"],
      matchPackagePatterns: ["*"],
      matchUpdateTypes: ["minor", "patch", "digest", "pinDigest"],
      schedule: ["every 4 weeks on Sunday"],
    },

    // Group major GitHub Actions updates
    {
      enabled: true,
      groupName: "GitHub Actions major",
      matchManagers: ["github-actions"],
      matchPackagePatterns: ["*"],
      matchUpdateTypes: ["major"],
      schedule: ["every 4 weeks on Sunday"],
    },

    // Go version used in GitHub Actions is updated manually
    {
      enabled: false,
      matchDatasources: ["github-releases"],
      matchDepNames: ["go"],
      matchDepTypes: ["uses-with"],
    },

    // Node version used in GitHub Actions is updated manually
    {
      enabled: false,
      matchDatasources: ["github-releases"],
      matchDepNames: ["node"],
      matchDepTypes: ["uses-with"],
    },
  ],

  // Enable security upgrades
  vulnerabilityAlerts: {
    enabled: true,
  },
  osvVulnerabilityAlerts: true,
  dependencyDashboard: true,
}
