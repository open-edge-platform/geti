# Copyright (C) 2022-2025 Intel Corporation
# LIMITED EDGE SOFTWARE DISTRIBUTION LICENSE

CWD = $(abspath $(patsubst %/,%,$(dir $(abspath $(lastword $(MAKEFILE_LIST))))))

.PHONY: build-image-default push-image publish-chart lint-chart-default

###
# version
###
PRODUCT_VERSION                    ?= 2.9.0
TAG                                ?= $(PRODUCT_VERSION)-local-$(shell git rev-parse --short HEAD)

###
# registries
###
REGISTRY                          ?= local
IMAGES_REGISTRY                   ?= ${REGISTRY}/geti
CHARTS_REGISTRY                   ?= ${REGISTRY}/geti/charts
BASE_IMAGES_REGISTRY              ?= ${REGISTRY}/base-images

###
# base images versions
###
BASE_OTE_V2_IMAGE_TAG             ?= 12.8.1.1.30

###
# component
###
CHART_DIR                         := ./chart
CHART_YAML                        := ${CHART_DIR}/Chart.yaml
COMPONENT_NAME                    := $(shell grep '^name:' ${CHART_YAML} | sed 's/^name: //')

###
# docker extra arguments
###
DOCKER_BUILD_CONTEXT              ?=

DOCKER_EXTRA_ARGS                 := \
    $(if $(REGISTRY),--build-arg REGISTRY=$(REGISTRY)) \
    $(if $(http_proxy),--build-arg HTTP_PROXY=$(http_proxy)) \
    $(if $(https_proxy),--build-arg HTTPS_PROXY=$(https_proxy)) \
    $(if $(no_proxy),--build-arg HTTPS_PROXY=$(NO_PROXY)) \
    $(if $(HTTP_PROXY),--build-arg HTTP_PROXY=$(HTTP_PROXY)) \
    $(if $(HTTPS_PROXY),--build-arg HTTPS_PROXY=$(HTTPS_PROXY)) \
    $(if $(NO_PROXY),--build-arg HTTPS_PROXY=$(NO_PROXY))

###
# docker builder extra arguments
###
DOCKER_PROXY                      := \
    $(if $(http_proxy),-e http_proxy=$(http_proxy)) \
    $(if $(https_proxy),-e http_proxy=$(https_proxy)) \
    $(if $(no_proxy),-e http_proxy=$(no_proxy)) \
    $(if $(HTTP_PROXY),-e http_proxy=$(HTTP_PROXY)) \
    $(if $(HTTPS_PROXY),-e http_proxy=$(HTTPS_PROXY)) \
    $(if $(NO_PROXY),-e http_proxy=$(NO_PROXY))

###
# docker images
###
build-image-default:
	@echo "Building docker image for component: ${COMPONENT_NAME}"
	@docker build \
		${DOCKER_EXTRA_ARGS} \
		${DOCKER_BUILD_CONTEXT} \
		-t ${IMAGES_REGISTRY}/${COMPONENT_NAME}:${TAG} \
		-f ./Dockerfile .


push-image:
	@echo "Pushing docker image for component: ${COMPONENT_NAME}"
	@docker push ${IMAGES_REGISTRY}/${COMPONENT_NAME}:${TAG}

###
# helm charts
###
lint-chart-default:
	@echo "Running chart linter for component: ${COMPONENT_NAME}"
	helm lint --with-subcharts $(dir ${CHART_YAML})

publish-chart:
	@echo "Publishing chart for component: ${COMPONENT_NAME}"
	helm package $(dir ${CHART_YAML}) --version ${TAG}
	helm push ${COMPONENT_NAME}-${TAG}.tgz oci://${CHARTS_REGISTRY}

# To suppress warnings when overriding Makefile targets, declare the abstract targets as <name>-default
%:  %-default
	@  true

# Remove first goal from MAKECMDGOALS when using "make builder <goals_list>"
ifeq (builder,$(firstword $(MAKECMDGOALS)))
  BUILDER_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))
  $(eval $(BUILDER_ARGS):;@:)
  ROOT_DIR=$(shell git rev-parse --show-toplevel)
  RELATIVE_PATH=$(shell realpath --relative-to=$(ROOT_DIR) $(CURDIR))
endif

# Run builder container when do "make builder -C <directory> <args>"
builder:
	@docker run --rm -u $(shell id -u):$(shell getent group docker | cut -d: -f3) \
		-v "$(ROOT_DIR):/app" \
		-v /var/run/docker.sock:/var/run/docker.sock \
		-v ~/.docker/config.json:/home/bulider/.docker/config.json \
		-w "/app" ${DOCKER_PROXY} ${BUILDER_IMAGE} make -C $(RELATIVE_PATH) $(BUILDER_ARGS)
