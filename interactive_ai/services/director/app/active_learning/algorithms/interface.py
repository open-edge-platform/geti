# Copyright (C) 2022-2025 Intel Corporation
# LIMITED EDGE SOFTWARE DISTRIBUTION LICENSE

import abc
import logging
from collections.abc import Sequence
from dataclasses import dataclass

import numpy as np

from active_learning.utils import NullableDataset

from sc_sdk.entities.dataset_item import DatasetItem
from sc_sdk.utils.classes import classproperty

logger = logging.getLogger(__name__)


@dataclass
class ScoringFunctionRequirements:
    """
    Manifest of the input data required by a scoring function to compute active scores
    """

    unseen_dataset_with_predictions: bool = False
    seen_dataset_with_predictions: bool = False
    seen_dataset_with_annotations: bool = False
    unseen_dataset_features: bool = False
    seen_dataset_features: bool = False


class IScoringFunction(metaclass=abc.ABCMeta):
    """
    Interface for active learning algorithms that compute a ranking score for
    unannotated items. The score is in range [0,1] (the lower the better).

    Different functions may depend on different input types, the required ones must be
    declared through property.
    """

    @classproperty
    @abc.abstractmethod
    def requirements(cls) -> ScoringFunctionRequirements:
        """Information about the required input data for this algorithm"""

    @staticmethod
    @abc.abstractmethod
    def compute_scores(
        unseen_dataset_with_predictions: NullableDataset,
        seen_dataset_items_with_predictions: Sequence[DatasetItem],
        seen_dataset_items_with_annotations: Sequence[DatasetItem],
        unseen_dataset_features: np.ndarray,
        seen_dataset_features: np.ndarray,
    ) -> np.ndarray:
        """
        Compute active scores for a dataset of unlabeled samples.

        :param unseen_dataset_with_predictions: Dataset of unlabeled items with
            predictions generated by a model. These samples are "unseen" by the model,
            i.e. the model was not trained on them.
        :param seen_dataset_items_with_predictions: Dataset of "seen" items with predictions
            generated by a model. These are the items on which the model was trained,
            but with predictions from that model rather than user annotation.
        :param seen_dataset_items_with_annotations: Dataset of "seen" items with annotations.
        :param unseen_dataset_features: Feature vectors relative to the unseen dataset.
            If required, it must have the same length of the unseen dataset.
        :param seen_dataset_features: Feature vectors relative to the seen dataset.
            If required, it must have the same length of the seen dataset.
        :return: Array of active scores for the unlabeled samples.
            The array has the same length and order of the unseen dataset.
        """
