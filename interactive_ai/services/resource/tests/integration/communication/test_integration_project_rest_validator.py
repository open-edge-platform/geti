# INTEL CONFIDENTIAL
#
# Copyright (C) 2023 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and
# your use of them is governed by the express license under which they were provided to
# you ("License"). Unless the License provides otherwise, you may not use, modify, copy,
# publish, distribute, disclose or transmit this software or the related documents
# without Intel's prior written permission.
#
# This software and the related documents are provided as is,
# with no express or implied warranties, other than those that are expressly stated
# in the License.

"""This module tests the ProjectRestValidator"""

import jsonschema.exceptions
import pytest

from communication.rest_data_validator import ProjectRestValidator


class TestProjectRestValidator:
    @staticmethod
    def get_update_project_request_body():
        return {
            "id": "610d3123b818ae2fcf302ba0",
            "name": "test_project",
            "pipeline": {
                "connections": [
                    {
                        "from": "610d3123b818ae2fcf302ba2",
                        "to": "610d3123b818ae2fcf302ba5",
                    }
                ],
                "tasks": [
                    {
                        "id": "610d3123b818ae2fcf302ba2",
                        "task_type": "dataset",
                        "title": "dataset",
                    },
                    {
                        "id": "610d3123b818ae2fcf302ba5",
                        "labels": [
                            {
                                "color": "#ff00ffff",
                                "group": "Label Group 1",
                                "id": "610d3123b818ae2fcf302b9d",
                                "is_empty": False,
                                "name": "test_proejct",
                                "parent_id": None,
                            },
                            {
                                "color": "#2a2b2eff",
                                "group": "Empty Label",
                                "id": "610d3123b818ae2fcf302b9e",
                                "is_empty": True,
                                "name": "Empty torch_segmentation torch_segmentation",
                                "parent_id": None,
                            },
                        ],
                        "task_type": "segmentation",
                        "title": "torch_segmentation",
                    },
                ],
            },
        }

    def test_validate_update_project(self):
        """
        <b>Description:</b>
        Tests if the validate_rest function correctly validates a project editing request

        <b>Input data:</b>
        Request body generated by self.get_update_project_request_body()

        <b>Expected results:</b>
        Test passes if the function correctly validates the request bodies

        <b>Steps</b>
        1. Create a valid request body
        2. Create a request body with empty name, missing pipeline or missing name
        3. Check that the correct request body raises no error and the incorrect request
         bodies do.
        """
        request_body_correct = self.get_update_project_request_body()
        request_body_no_name = self.get_update_project_request_body()
        request_body_no_name.pop("name")
        request_body_no_pipeline = self.get_update_project_request_body()
        request_body_no_pipeline.pop("pipeline")
        request_body_empty_name = self.get_update_project_request_body()
        request_body_empty_name.update({"name": ""})

        ProjectRestValidator().validate_update_data_statically(request_body_correct)
        with pytest.raises(jsonschema.exceptions.ValidationError):
            ProjectRestValidator().validate_update_data_statically(request_body_no_name)
        with pytest.raises(jsonschema.exceptions.ValidationError):
            ProjectRestValidator().validate_update_data_statically(request_body_no_pipeline)
        with pytest.raises(jsonschema.exceptions.ValidationError):
            ProjectRestValidator().validate_update_data_statically(request_body_empty_name)
