#!/bin/bash

# INTEL CONFIDENTIAL
#
# Copyright (C) 2024 Intel Corporation
#
# This software and the related documents are Intel copyrighted materials, and your use of them is governed by
# the express license under which they were provided to you ("License"). Unless the License provides otherwise,
# you may not use, modify, copy, publish, distribute, disclose or transmit this software or the related documents
# without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# Primary container's process ID file
PRIMARY_PID_FILE=$1

# Sidecar container's process ID
SIDECAR_PID=$2

# Counter for consecutive liveness check failures
failure_count=0

# Maximum allowed consecutive failures
max_failures=12

# Check interval in seconds
check_interval=5

while true; do
  if [ -f "$PRIMARY_PID_FILE" ]; then
    PRIMARY_PID=$(cat "$PRIMARY_PID_FILE")
    if kill -0 "$PRIMARY_PID" > /dev/null 2>&1; then
      echo "Primary process with PID $PRIMARY_PID is running."
      failure_count=0
    else
      echo "Primary process with PID $PRIMARY_PID is not running."
      failure_count=$((failure_count + 1))
    fi
  else
    echo "Primary PID file '$PRIMARY_PID_FILE' not found."
  fi

  if [ "$failure_count" -ge "$max_failures" ]; then
    echo "Primary process has been down for $((max_failures * check_interval)) seconds. Killing sidecar process '$SIDECAR_PID'."
    kill -SIGINT "$SIDECAR_PID"
    exit 1
  fi

  if ! kill -0 "$SIDECAR_PID" > /dev/null 2>&1; then
    echo "Sidecar process '$SIDECAR_PID' has been down. Terminate this script as well."
    exit 0
  fi

  sleep "$check_interval"
done
