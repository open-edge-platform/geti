---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Namespace }}-{{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "project-ie.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "project-ie.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        sidecar.opa-istio.io/inject: enabled
        proxy.istio.io/config: |
          terminationDrainDuration: 60s
      labels:
        {{- include "project-ie.selectorLabels" . | nindent 8 }}
        authorization: public_api
        opa_envoy_filter: enabled
    spec:
      terminationGracePeriodSeconds: 90
      serviceAccountName: {{ .Release.Namespace }}-{{ .Chart.Name }}
      initContainers:
        - name: volume-permissions
          image: "{{ .Values.global.busybox.registry }}/{{ if .Values.global.busybox.repository }}{{ .Values.global.busybox.repository }}/{{ end }}{{ .Values.global.busybox.name }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /bin/sh
          args:
            - -c
            - |
              mkdir -p "{{ .Values.mountPath }}"/storage
              mkdir -p "{{ .Values.storage_dir_path }}"/imports
              find {{ .Values.mountPath }} -type d -exec chown -v {{ .Values.securityContext.runAsUser }} {} +
              find {{ .Values.storage_dir_path }} -type d -exec chown -v {{ .Values.securityContext.runAsUser }} {} +
              find {{ .Values.audit_logs_mount_path }} -type d -exec chown -v {{ .Values.securityContext.runAsUser }} {} +
          volumeMounts:
            - name: data-storage
              mountPath: "/{{ .Values.audit_logs_mount_path }}"
              subPath: {{ .Values.audit_logs_mount_path }}
              readOnly: false
          resources:
            {{ toYaml .Values.initResources | nindent 12 }}
          securityContext:
            {{ toYaml .Values.volumeSecurityContext | nindent 12 }}
        # [mTLS STRICT] The kubectl-wait init container is used to wait for the init job that is related to this specific component.
        # This is a workaround to address the issue that arises when using Istio mTLS strict mode and init containers
        # that do not have the Istio proxy sidecar
        - name: "kubectl-wait"
          image: "{{ .Values.global.kubectl.registry }}/{{ if .Values.global.kubectl.repository }}{{ .Values.global.kubectl.repository }}/{{ end }}{{ .Values.global.kubectl.name }}"
          command: [ "/bin/bash", "-c" ]
          args:
            - >-
              kubectl wait jobs
              --timeout=1200s 
              --for=condition=complete 
              --namespace {{ .Release.Namespace }}
              init-job-{{ .Chart.Name }}
          securityContext:
            {{ toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.initResources | nindent 12 }}  
      containers:
        - name: &containerName project-ie
          image: "{{ .Values.global.registry_address }}/{{ .Values.global.docker_namespace }}/{{ .Values.image }}:{{ .Values.global.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            periodSeconds: 2
            initialDelaySeconds: 2
            timeoutSeconds: 2
            failureThreshold: 20
          readinessProbe:
            tcpSocket:

              port: {{ .Values.service.port }}
            periodSeconds: 2
            initialDelaySeconds: 2
            timeoutSeconds: 2
            failureThreshold: 20
          env:
            - name: MAX_NUMBER_OF_PROJECTS_PER_ORGANIZATION
              valueFrom:
                configMapKeyRef:
                  key: max_number_of_projects_per_organization
                  name: impt-configuration
            - name: MIN_FREE_SPACE_GIB
              value: "{{ .Values.global.min_free_disk_space_gib }}"
            - name: DOWNLOAD_URL_VALIDITY_PERIOD
              value: "{{ .Values.global.download_url_validity_period }}"
            - name: WORKDIR
              value: {{ .Values.diskSizeMountPath }}
            - name: MODEL_TEMPLATES_DIR
              value: /model_templates
            - name: DATABASE_ADDRESS
              value: mongodb://{{ .Release.Namespace }}-mongodb:27017/
            {{- if .Values.global.enable_mongodb_credentials }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Namespace }}-mongodb
                  key: {{ .Chart.Name }}-mongodb-username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Namespace }}-mongodb
                  key: {{ .Chart.Name }}-mongodb-password
            {{- end }}
            - name: STORAGE_DIR_PATH
              value: "/{{ .Values.storage_dir_path }}"
            - name: PLATFORM_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Namespace }}-configuration
                  key: platformVersion
            - name: JOB_SERVICE_ADDRESS
              value: {{ .Release.Namespace }}-jobs-ms:50051
            {{- if eq (default "standard" .Values.global.installation_profile) "standard" }}
            - name: ENABLE_TRACING
              value: "true"
            - name: ENABLE_METRICS
              value: "true"
            {{- end }}
            - name: OTEL_SERVICE_NAME
              value: project-ie-microservice
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_CONTAINER_NAME
              value: *containerName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.instance.id=$(K8S_POD_NAME),k8s.pod.uid=$(K8S_POD_UID),k8s.container.name=$(K8S_CONTAINER_NAME)
            - name: OTLP_TRACES_RECEIVER
              value: "{{ .Release.Namespace }}-opentelemetry-collector.{{ .Release.Namespace }}:4317"
            - name: OTLP_METRICS_RECEIVER
              value: "{{ .Release.Namespace }}-opentelemetry-collector.{{ .Release.Namespace }}:4317"
            - name: OTLP_TRACES_PROTOCOL
              value: grpc
            - name: OTLP_PROCESSOR_DO_NOT_SEND_SPANS
              value: "PATCH"
            - name: MODEL_REGISTRATION_SERVICE
              value: "{{ .Release.Namespace }}-modelregistration.{{ .Release.Namespace }}:5555"
            - name: MONGODB_CREDENTIALS_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Namespace }}-configuration
                  key: mongodb_credentials_provider
            {{- if .Values.global.enable_object_storage }}
            - name: S3_CREDENTIALS_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Namespace }}-configuration
                  key: s3_credentials_provider
            - name: "S3_SECRET_KEY"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "project_ie_secret_key"
            - name: "S3_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "project_ie_access_key"
            - name: S3_HOST
              valueFrom:
                configMapKeyRef:
                  key: "s3_endpoint"
                  name: "{{ .Release.Namespace }}-configuration"
                  optional: true
            - name: S3_PRESIGNED_URL_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace}}-seaweed-fs"
                  key: "project_ie_s3_presigned_url_access_key"
            - name: S3_PRESIGNED_URL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace}}-seaweed-fs"
                  key: "project_ie_s3_presigned_url_secret_key"
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Namespace }}-feature-flags
            - configMapRef:
                name: {{ .Release.Namespace }}-s3-bucket-names
          securityContext:
            {{ toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/{{ .Values.audit_logs_mount_path }}"
              name: data-storage
              subPath: {{ .Values.audit_logs_mount_path }}
            - mountPath: /tmp
              name: tmp
            - name: disk-size
              mountPath: {{ .Values.diskSizeMountPath }}
              subPath: {{ .Values.audit_logs_mount_path }}
              readOnly: true
          ports:
            - name: project
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "60s"]
      volumes:
        - name: data-storage
          emptyDir: {}
        - emptyDir: {}
          name: tmp
        - name: disk-size
          persistentVolumeClaim:
            claimName: data-storage-volume-claim
