apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Namespace }}-{{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "media-ms.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "media-ms.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        sidecar.opa-istio.io/inject: enabled
        proxy.istio.io/config: |
          terminationDrainDuration: 60s
      labels:
        {{- include "media-ms.selectorLabels" . | nindent 8 }}
        opa_envoy_filter: enabled
    spec:
      terminationGracePeriodSeconds: 90
      serviceAccountName: {{ include "media-ms.serviceAccountName" . }}
      containers:
        - name: &containerName {{ .Chart.Name }}
          image: "{{ .Values.global.registry_address }}/{{ .Values.global.docker_namespace }}/{{ .Values.image }}:{{ .Values.global.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            periodSeconds: 2
            initialDelaySeconds: 2
            timeoutSeconds: 2
            failureThreshold: 20
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.port }}
            periodSeconds: 2
            initialDelaySeconds: 2
            timeoutSeconds: 2
            failureThreshold: 20
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: GOMAXPROCS
              value: "{{ .Values.resources.requests.cpu }}"
            - name: GOMEMLIMIT
              value: "{{ .Values.global.mem_limit }}"
            - name: MIN_FREE_SPACE_GIB
              value: "{{ .Values.global.min_free_disk_space_gib }}"
            - name: WORKDIR
              value: {{ .Values.diskSizeMountPath }}
            {{- if .Values.global.enable_object_storage }}
            - name: S3_CREDENTIALS_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Namespace }}-configuration
                  key: s3_credentials_provider
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "media_ms_secret_key"
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace }}-seaweed-fs"
                  key: "media_ms_access_key"
            - name: S3_HOST
              valueFrom:
                configMapKeyRef:
                  key: "s3_endpoint"
                  name: "{{ .Release.Namespace }}-configuration"
                  optional: true
            - name: S3_PRESIGNED_URL_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace}}-seaweed-fs"
                  key: "media_ms_s3_presigned_url_access_key"
            - name: S3_PRESIGNED_URL_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Namespace}}-seaweed-fs"
                  key: "media_ms_s3_presigned_url_secret_key"
            {{- end }}
            {{- if eq (default "standard" .Values.global.installation_profile) "standard" }}
            - name: ENABLE_TRACING
              value: "true"
            - name: ENABLE_METRICS
              value: "true"
            {{- end}}
            - name: OTEL_SERVICE_NAME
              value: media-microservice
            - name: OTLP_TRACES_RECEIVER
              value: "{{ .Release.Namespace }}-opentelemetry-collector.{{ .Release.Namespace }}:4317"
            - name: OTLP_METRICS_RECEIVER
              value: "{{ .Release.Namespace }}-opentelemetry-collector.{{ .Release.Namespace }}:4317"
            - name: OTLP_TRACES_PROTOCOL
              value: grpc
            - name: OTEL_TRACES_SAMPLER
              value: parentbased_traceidratio
            - name: OTEL_TRACES_SAMPLER_ARG
              value: "0.1"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_CONTAINER_NAME
              value: *containerName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.instance.id=$(K8S_POD_NAME),k8s.pod.uid=$(K8S_POD_UID),k8s.container.name=$(K8S_CONTAINER_NAME)
          envFrom:
            - configMapRef:
                name: {{ .Release.Namespace }}-feature-flags
            - configMapRef:
                name: {{ .Release.Namespace }}-s3-bucket-names
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.mountPath }}
              name: data-storage
              subPath: binary_data
            - name: disk-size
              mountPath: {{ .Values.diskSizeMountPath }}
              subPath: {{ .Values.audit_logs_mount_path }}
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "60s"]
      volumes:
        {{- if .Values.global.storage_volume_claim_name_media }}
        - name: data-storage
          persistentVolumeClaim:
            claimName: {{ .Values.global.storage_volume_claim_name_media }}
        {{- else }}
        - name: data-storage
          emptyDir: {}
        {{- end }}
        - name: disk-size
          persistentVolumeClaim:
            claimName: data-storage-volume-claim
