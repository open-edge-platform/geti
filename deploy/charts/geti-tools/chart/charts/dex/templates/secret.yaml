apiVersion: v1
kind: Secret
metadata:
  name: {{ include "dex.componentname" (list . "config") }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "dex.labels" . | nindent 4 }}
type: Opaque
stringData:
  config.yaml: |-
    # Set it to a valid URL
    issuer: https://127.0.0.1/dex

    # See https://dexidp.io/docs/storage/ for more options
    storage:
      type: kubernetes
      config:
        inCluster: true

    # HTTP service configuration
    web:
      http: impt-dex:5556

    # Custom templates
    frontend:
      dir: /web
      extra:
        isSMTPDefined: {{ .Values.isSMTPDefined }}

    # define OpenLDAP as a LDAP
    connectors:
    - id: regular_users
      type: ldap
      name: OpenLDAP
      config:
        host: "impt-openldap:389"

        # No TLS for this setup.
        insecureNoSSL: true
        insecureSkipVerify: true

        # This would normally be a read-only user.
        bindDN: "cn=${LDAP_READONLY_USER_USERNAME},dc=example,dc=org"
        bindPW: "${LDAP_READONLY_USER_PASSWORD}"

        # The attribute to display in the provided password prompt. If unset, will
        # display "Username"
        # usernamePrompt: SSO Username
        userSearch:
          baseDN: dc=example,dc=org
          filter: "(&(!(gidNumber=502))(objectClass=posixAccount))"
          username: mail
          # "DN" (case sensitive) is a special attribute name. It indicates that
          # this value should be taken from the entity's DN not an attribute on
          # the entity.
          idAttr: DN
          emailAttr: mail
          nameAttr: cn
          preferredUsernameAttr: uid

        groupSearch:
          baseDN: ou=Groups,dc=example,dc=org
          filter: "(objectClass=posixGroup)"
          userMatchers:
          # A user is a member of a group when their DN matches
          # the value of a "member" attribute on the group entity.
            - userAttr: uid
              groupAttr: memberuid
          # The group name should be the "cn" value.
          nameAttr: cn

    # Static clients registered in Dex by default.
    staticClients:
      - id: "web_ui"
        redirectURIs:
          - '/callback'
        name: 'IMPT'
        public: true
    # Expiration configuration for tokens, signing keys, etc.
    expiry:
      deviceRequests: "5m"
      signingKeys: "6h"
      idTokens: "70m"
      refreshTokens:
        reuseInterval: "10s"
        validForIfNotUsed: "70m"
        absoluteLifetime: "8h"
    oauth2:
      skipApprovalScreen: true
      responseTypes:  ["code", "token", "id_token"]
      passwordConnector: regular_users
    logger:
      level: "debug"
