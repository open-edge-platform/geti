apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geti-controller.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "geti-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "geti-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geti-controller.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "geti-controller.name" . }}
{{- if .Values.global.ingress_enabled }}
      initContainers:
        - name: volume-permissions
          image: "{{ .Values.global.busybox.registry }}/{{ if .Values.global.busybox.repository }}{{ .Values.global.busybox.repository }}/{{ end }}{{ .Values.global.busybox.name }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          command:
            - /bin/sh
          args:
            - -c
            - |
              find {{ .Values.mountPath }} -type d -exec chown -v {{ .Values.securityContext.runAsUser }} {} +
          volumeMounts:
            - name: data-storage
              mountPath: {{ .Values.mountPath }}
              readOnly: false
          resources:
            {{ toYaml .Values.initResources | nindent 12 }}
          securityContext:
            {{ toYaml .Values.volumeSecurityContext | nindent 12 }}
{{- end }}
      containers:
        - name: &containerName {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.registry_address }}/{{ .Values.global.docker_namespace }}/{{ .Values.image }}:{{ .Values.global.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: REGISTRY
              value: {{ .Values.global.registry_address }}
            - name: VERSION
              # TODO change version to generated
              value: "2.10.0-test-20250528144400"
              #value: {{ .Values.global.tag | default .Chart.AppVersion }}
            - name: DATA_FOLDER
              value: {{ .Values.mountPath }}
{{- if .Values.global.ingress_enabled }}
            - name: ENABLE_TRACING
              value: "true"
            - name: OTEL_SERVICE_NAME
              value: "{{ include "geti-controller.name" . }}-microservice"
            - name: OTLP_TRACES_RECEIVER
              value: "{{ .Release.Namespace }}-opentelemetry-collector.{{ .Release.Namespace }}:4317"
            - name: OTLP_TRACES_PROTOCOL
              value: grpc
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: K8S_CONTAINER_NAME
              value: *containerName
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.instance.id=$(K8S_POD_NAME),k8s.pod.uid=$(K8S_POD_UID),k8s.container.name=$(K8S_CONTAINER_NAME)
{{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.https }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.ports.https }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.ports.https }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: {{ .Values.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
{{- if .Values.global.ingress_enabled }}
          volumeMounts:
            - name: data-storage
              mountPath: {{ .Values.mountPath }}
              readOnly: false
      volumes:
        - name: data-storage
          persistentVolumeClaim:
            claimName: data-storage-volume-claim
{{- end }}
